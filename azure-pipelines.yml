pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  branches:
    include:
    - master
    - feature/*
    - bug/*

pr:
  branches:
    include:
    - master

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '8.x'

- script: |
    pip install setuptools
    pip install awscli
  displayName: 'Installing AWS CLI'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install

# - task: Npm@1
#   displayName: 'npm run test'
#   inputs:
#     command: custom
#     customCommand: 'run test'

# - task: PublishTestResults@2
#   displayName: 'Publishing test results'
#   condition: succeededOrFailed()
#   inputs:
#     testRunner: JUnit
#     testResultsFiles: '**/junit.xml'

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publishing code coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
#     reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- task: Npm@1
  displayName: 'Deploying functions to DEV'
  inputs:
    command: custom
    customCommand: 'run dev-deploy'
  env:
    AWS_ACCESS_KEY_ID: $(DEV_AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(DEV_AWS_SECRET_ACCESS_KEY)
    COGNITO_ARN: $(DEV_COGNITO_ARN)
    HOST: $(DEV_HOST)
    PORT: $(DEV_PORT)
    USERNAME: $(DEV_USERNAME)
    PASSWORD: $(DEV_PASSWORD)
    DATABASE: $(DEV_DATABASE)
    SUBNET_1: $(SUBNET_1)
    SUBNET_2: $(SUBNET_2)
    SUBNET_3: $(SUBNET_3)
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

- task: Npm@1
  displayName: 'Deploying functions to PROD'
  inputs:
    command: custom
    customCommand: 'run dev-deploy' # will be changed to prod when we are going to go live
  env:
    AWS_ACCESS_KEY_ID: $(PROD_AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(PROD_AWS_SECRET_ACCESS_KEY)
    COGNITO_ARN: $(PROD_COGNITO_ARN)
    HOST: $(PROD_HOST)
    PORT: $(PROD_PORT)
    USERNAME: $(PROD_USERNAME)
    PASSWORD: $(PROD_PASSWORD)
    DATABASE: $(PROD_DATABASE)
    SUBNET_1: $(SUBNET_1)
    SUBNET_2: $(SUBNET_2)
    SUBNET_3: $(SUBNET_3)
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
